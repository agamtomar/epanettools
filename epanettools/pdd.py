# This file was automatically generated by SWIG (http://www.swig.org).
# Version 3.0.5
#
# Do not make changes to this file unless you know what you are doing--modify
# the SWIG interface file instead.





from sys import version_info
if version_info >= (2, 6, 0):
    def swig_import_helper():
        from os.path import dirname
        import imp
        fp = None
        try:
            fp, pathname, description = imp.find_module('_pdd', [dirname(__file__)])
        except ImportError:
            import _pdd
            return _pdd
        if fp is not None:
            try:
                _mod = imp.load_module('_pdd', fp, pathname, description)
            finally:
                fp.close()
            return _mod
    _pdd = swig_import_helper()
    del swig_import_helper
else:
    import _pdd
del version_info
try:
    _swig_property = property
except NameError:
    pass  # Python < 2.2 doesn't have 'property'.


def _swig_setattr_nondynamic(self, class_type, name, value, static=1):
    if (name == "thisown"):
        return self.this.own(value)
    if (name == "this"):
        if type(value).__name__ == 'SwigPyObject':
            self.__dict__[name] = value
            return
    method = class_type.__swig_setmethods__.get(name, None)
    if method:
        return method(self, value)
    if (not static):
        if _newclass:
            object.__setattr__(self, name, value)
        else:
            self.__dict__[name] = value
    else:
        raise AttributeError("You cannot add attributes to %s" % self)


def _swig_setattr(self, class_type, name, value):
    return _swig_setattr_nondynamic(self, class_type, name, value, 0)


def _swig_getattr_nondynamic(self, class_type, name, static=1):
    if (name == "thisown"):
        return self.this.own()
    method = class_type.__swig_getmethods__.get(name, None)
    if method:
        return method(self)
    if (not static):
        return object.__getattr__(self, name)
    else:
        raise AttributeError(name)

def _swig_getattr(self, class_type, name):
    return _swig_getattr_nondynamic(self, class_type, name, 0)


def _swig_repr(self):
    try:
        strthis = "proxy of " + self.this.__repr__()
    except:
        strthis = ""
    return "<%s.%s; %s >" % (self.__class__.__module__, self.__class__.__name__, strthis,)

try:
    _object = object
    _newclass = 1
except AttributeError:
    class _object:
        pass
    _newclass = 0



_pdd.WRAPPER_ERROR_FILE_OPEN_swigconstant(_pdd)
WRAPPER_ERROR_FILE_OPEN = _pdd.WRAPPER_ERROR_FILE_OPEN

_pdd.WRAPPER_ERROR_NOT_IMPLEMENTED_swigconstant(_pdd)
WRAPPER_ERROR_NOT_IMPLEMENTED = _pdd.WRAPPER_ERROR_NOT_IMPLEMENTED

def ENepanet_wrap(f1, f2, f3, pviewprog):
    return _pdd.ENepanet_wrap(f1, f2, f3, pviewprog)
ENepanet_wrap = _pdd.ENepanet_wrap

def ENopen_wrap(a1, a2, a3):
    return _pdd.ENopen_wrap(a1, a2, a3)
ENopen_wrap = _pdd.ENopen_wrap

def ENsaveinpfile_wrap(a1):
    return _pdd.ENsaveinpfile_wrap(a1)
ENsaveinpfile_wrap = _pdd.ENsaveinpfile_wrap

def ENclose_wrap():
    return _pdd.ENclose_wrap()
ENclose_wrap = _pdd.ENclose_wrap

def ENsolveH_wrap():
    return _pdd.ENsolveH_wrap()
ENsolveH_wrap = _pdd.ENsolveH_wrap

def ENsaveH_wrap():
    return _pdd.ENsaveH_wrap()
ENsaveH_wrap = _pdd.ENsaveH_wrap

def ENopenH_wrap():
    return _pdd.ENopenH_wrap()
ENopenH_wrap = _pdd.ENopenH_wrap

def ENinitH_wrap(a1):
    return _pdd.ENinitH_wrap(a1)
ENinitH_wrap = _pdd.ENinitH_wrap

def ENrunH_wrap():
    return _pdd.ENrunH_wrap()
ENrunH_wrap = _pdd.ENrunH_wrap

def ENnextH_wrap():
    return _pdd.ENnextH_wrap()
ENnextH_wrap = _pdd.ENnextH_wrap

def ENcloseH_wrap():
    return _pdd.ENcloseH_wrap()
ENcloseH_wrap = _pdd.ENcloseH_wrap

def ENsavehydfile_wrap(a1):
    return _pdd.ENsavehydfile_wrap(a1)
ENsavehydfile_wrap = _pdd.ENsavehydfile_wrap

def ENusehydfile_wrap(a1):
    return _pdd.ENusehydfile_wrap(a1)
ENusehydfile_wrap = _pdd.ENusehydfile_wrap

def ENsolveQ_wrap():
    return _pdd.ENsolveQ_wrap()
ENsolveQ_wrap = _pdd.ENsolveQ_wrap

def ENopenQ_wrap():
    return _pdd.ENopenQ_wrap()
ENopenQ_wrap = _pdd.ENopenQ_wrap

def ENinitQ_wrap(a1):
    return _pdd.ENinitQ_wrap(a1)
ENinitQ_wrap = _pdd.ENinitQ_wrap

def ENrunQ_wrap():
    return _pdd.ENrunQ_wrap()
ENrunQ_wrap = _pdd.ENrunQ_wrap

def ENnextQ_wrap():
    return _pdd.ENnextQ_wrap()
ENnextQ_wrap = _pdd.ENnextQ_wrap

def ENstepQ_wrap():
    return _pdd.ENstepQ_wrap()
ENstepQ_wrap = _pdd.ENstepQ_wrap

def ENcloseQ_wrap():
    return _pdd.ENcloseQ_wrap()
ENcloseQ_wrap = _pdd.ENcloseQ_wrap

def ENwriteline_wrap(a1):
    return _pdd.ENwriteline_wrap(a1)
ENwriteline_wrap = _pdd.ENwriteline_wrap

def ENreport_wrap():
    return _pdd.ENreport_wrap()
ENreport_wrap = _pdd.ENreport_wrap

def ENresetreport_wrap():
    return _pdd.ENresetreport_wrap()
ENresetreport_wrap = _pdd.ENresetreport_wrap

def ENsetreport_wrap(a1):
    return _pdd.ENsetreport_wrap(a1)
ENsetreport_wrap = _pdd.ENsetreport_wrap

def ENgetcontrol_wrap(a1, a2, a3, a4, a5, a6):
    return _pdd.ENgetcontrol_wrap(a1, a2, a3, a4, a5, a6)
ENgetcontrol_wrap = _pdd.ENgetcontrol_wrap

def ENgetcount_wrap(a1, a2):
    return _pdd.ENgetcount_wrap(a1, a2)
ENgetcount_wrap = _pdd.ENgetcount_wrap

def ENgetoption_wrap(a1, a2):
    return _pdd.ENgetoption_wrap(a1, a2)
ENgetoption_wrap = _pdd.ENgetoption_wrap

def ENgettimeparam_wrap(a1, a2):
    return _pdd.ENgettimeparam_wrap(a1, a2)
ENgettimeparam_wrap = _pdd.ENgettimeparam_wrap

def ENgetflowunits_wrap(a1):
    return _pdd.ENgetflowunits_wrap(a1)
ENgetflowunits_wrap = _pdd.ENgetflowunits_wrap

def ENgetpatternindex_wrap(a1, a2):
    return _pdd.ENgetpatternindex_wrap(a1, a2)
ENgetpatternindex_wrap = _pdd.ENgetpatternindex_wrap

def ENgetpatternid_wrap(a1, a2):
    return _pdd.ENgetpatternid_wrap(a1, a2)
ENgetpatternid_wrap = _pdd.ENgetpatternid_wrap

def ENgetpatternlen_wrap(a1, a2):
    return _pdd.ENgetpatternlen_wrap(a1, a2)
ENgetpatternlen_wrap = _pdd.ENgetpatternlen_wrap

def ENgetpatternvalue_wrap(a1, a2, a3):
    return _pdd.ENgetpatternvalue_wrap(a1, a2, a3)
ENgetpatternvalue_wrap = _pdd.ENgetpatternvalue_wrap

def ENgetqualtype_wrap(a1, a2):
    return _pdd.ENgetqualtype_wrap(a1, a2)
ENgetqualtype_wrap = _pdd.ENgetqualtype_wrap

def ENgeterror_wrap(a1, a2, a3):
    return _pdd.ENgeterror_wrap(a1, a2, a3)
ENgeterror_wrap = _pdd.ENgeterror_wrap

def ENgetnodeindex_wrap(a1, a2):
    return _pdd.ENgetnodeindex_wrap(a1, a2)
ENgetnodeindex_wrap = _pdd.ENgetnodeindex_wrap

def ENgetnodeid_wrap(a1, a2):
    return _pdd.ENgetnodeid_wrap(a1, a2)
ENgetnodeid_wrap = _pdd.ENgetnodeid_wrap

def ENgetnodetype_wrap(a1, a2):
    return _pdd.ENgetnodetype_wrap(a1, a2)
ENgetnodetype_wrap = _pdd.ENgetnodetype_wrap

def ENgetnodevalue_wrap(a1, a2, a3):
    return _pdd.ENgetnodevalue_wrap(a1, a2, a3)
ENgetnodevalue_wrap = _pdd.ENgetnodevalue_wrap

def ENgetlinkindex_wrap(a1, a2):
    return _pdd.ENgetlinkindex_wrap(a1, a2)
ENgetlinkindex_wrap = _pdd.ENgetlinkindex_wrap

def ENgetlinkid_wrap(a1, a2):
    return _pdd.ENgetlinkid_wrap(a1, a2)
ENgetlinkid_wrap = _pdd.ENgetlinkid_wrap

def ENgetlinktype_wrap(a1, a2):
    return _pdd.ENgetlinktype_wrap(a1, a2)
ENgetlinktype_wrap = _pdd.ENgetlinktype_wrap

def ENgetlinknodes_wrap(a1, a2, a3):
    return _pdd.ENgetlinknodes_wrap(a1, a2, a3)
ENgetlinknodes_wrap = _pdd.ENgetlinknodes_wrap

def ENgetlinkvalue_wrap(a1, a2, a3):
    return _pdd.ENgetlinkvalue_wrap(a1, a2, a3)
ENgetlinkvalue_wrap = _pdd.ENgetlinkvalue_wrap

def ENgetversion_wrap(a1):
    return _pdd.ENgetversion_wrap(a1)
ENgetversion_wrap = _pdd.ENgetversion_wrap

def ENsetcontrol_wrap(a1, a2, a3, a4, a5, a6):
    return _pdd.ENsetcontrol_wrap(a1, a2, a3, a4, a5, a6)
ENsetcontrol_wrap = _pdd.ENsetcontrol_wrap

def ENsetnodevalue_wrap(a1, a2, a3):
    return _pdd.ENsetnodevalue_wrap(a1, a2, a3)
ENsetnodevalue_wrap = _pdd.ENsetnodevalue_wrap

def ENsetlinkvalue_wrap(a1, a2, a3):
    return _pdd.ENsetlinkvalue_wrap(a1, a2, a3)
ENsetlinkvalue_wrap = _pdd.ENsetlinkvalue_wrap

def ENaddpattern_wrap(a1):
    return _pdd.ENaddpattern_wrap(a1)
ENaddpattern_wrap = _pdd.ENaddpattern_wrap

def ENsetpattern_wrap(a1, a2, a3):
    return _pdd.ENsetpattern_wrap(a1, a2, a3)
ENsetpattern_wrap = _pdd.ENsetpattern_wrap

def ENsetpatternvalue_wrap(a1, a2, a3):
    return _pdd.ENsetpatternvalue_wrap(a1, a2, a3)
ENsetpatternvalue_wrap = _pdd.ENsetpatternvalue_wrap

def ENsettimeparam_wrap(a1, a2):
    return _pdd.ENsettimeparam_wrap(a1, a2)
ENsettimeparam_wrap = _pdd.ENsettimeparam_wrap

def ENsetoption_wrap(a1, a2):
    return _pdd.ENsetoption_wrap(a1, a2)
ENsetoption_wrap = _pdd.ENsetoption_wrap

def ENsetstatusreport_wrap(a1):
    return _pdd.ENsetstatusreport_wrap(a1)
ENsetstatusreport_wrap = _pdd.ENsetstatusreport_wrap

def ENsetqualtype_wrap(a1, a2, a3, a4):
    return _pdd.ENsetqualtype_wrap(a1, a2, a3, a4)
ENsetqualtype_wrap = _pdd.ENsetqualtype_wrap

def ENsetemitter_wrap(a1, a2):
    return _pdd.ENsetemitter_wrap(a1, a2)
ENsetemitter_wrap = _pdd.ENsetemitter_wrap

def ENgetemitter_wrap(a1, a2):
    return _pdd.ENgetemitter_wrap(a1, a2)
ENgetemitter_wrap = _pdd.ENgetemitter_wrap

def write_sign(str):
    return _pdd.write_sign(str)
write_sign = _pdd.write_sign

def getcurrenttime():
    return _pdd.getcurrenttime()
getcurrenttime = _pdd.getcurrenttime

def run_before_ENopen():
    return _pdd.run_before_ENopen()
run_before_ENopen = _pdd.run_before_ENopen

def run_before_ENsaveinpfile():
    return _pdd.run_before_ENsaveinpfile()
run_before_ENsaveinpfile = _pdd.run_before_ENsaveinpfile

def run_before_ENclose():
    return _pdd.run_before_ENclose()
run_before_ENclose = _pdd.run_before_ENclose

def run_before_ENsaveH():
    return _pdd.run_before_ENsaveH()
run_before_ENsaveH = _pdd.run_before_ENsaveH

def run_before_ENinitH():
    return _pdd.run_before_ENinitH()
run_before_ENinitH = _pdd.run_before_ENinitH

def run_before_ENrunH():
    return _pdd.run_before_ENrunH()
run_before_ENrunH = _pdd.run_before_ENrunH

def run_before_ENnextH():
    return _pdd.run_before_ENnextH()
run_before_ENnextH = _pdd.run_before_ENnextH

def run_before_ENcloseH():
    return _pdd.run_before_ENcloseH()
run_before_ENcloseH = _pdd.run_before_ENcloseH

def run_before_ENsavehydfile():
    return _pdd.run_before_ENsavehydfile()
run_before_ENsavehydfile = _pdd.run_before_ENsavehydfile

def run_before_ENusehydfile():
    return _pdd.run_before_ENusehydfile()
run_before_ENusehydfile = _pdd.run_before_ENusehydfile

def run_before_ENsolveQ():
    return _pdd.run_before_ENsolveQ()
run_before_ENsolveQ = _pdd.run_before_ENsolveQ

def run_before_ENopenQ():
    return _pdd.run_before_ENopenQ()
run_before_ENopenQ = _pdd.run_before_ENopenQ

def run_before_ENinitQ():
    return _pdd.run_before_ENinitQ()
run_before_ENinitQ = _pdd.run_before_ENinitQ

def run_before_ENrunQ():
    return _pdd.run_before_ENrunQ()
run_before_ENrunQ = _pdd.run_before_ENrunQ

def run_before_ENnextQ():
    return _pdd.run_before_ENnextQ()
run_before_ENnextQ = _pdd.run_before_ENnextQ

def run_before_ENstepQ():
    return _pdd.run_before_ENstepQ()
run_before_ENstepQ = _pdd.run_before_ENstepQ

def run_before_ENcloseQ():
    return _pdd.run_before_ENcloseQ()
run_before_ENcloseQ = _pdd.run_before_ENcloseQ

def run_before_ENwriteline():
    return _pdd.run_before_ENwriteline()
run_before_ENwriteline = _pdd.run_before_ENwriteline

def run_before_ENreport():
    return _pdd.run_before_ENreport()
run_before_ENreport = _pdd.run_before_ENreport

def run_before_ENresetreport():
    return _pdd.run_before_ENresetreport()
run_before_ENresetreport = _pdd.run_before_ENresetreport

def run_before_ENsetreport():
    return _pdd.run_before_ENsetreport()
run_before_ENsetreport = _pdd.run_before_ENsetreport

def run_before_ENgetcontrol():
    return _pdd.run_before_ENgetcontrol()
run_before_ENgetcontrol = _pdd.run_before_ENgetcontrol

def run_before_ENgetcount():
    return _pdd.run_before_ENgetcount()
run_before_ENgetcount = _pdd.run_before_ENgetcount

def run_before_ENgetoption():
    return _pdd.run_before_ENgetoption()
run_before_ENgetoption = _pdd.run_before_ENgetoption

def run_before_ENgettimeparam():
    return _pdd.run_before_ENgettimeparam()
run_before_ENgettimeparam = _pdd.run_before_ENgettimeparam

def run_before_ENgetflowunits():
    return _pdd.run_before_ENgetflowunits()
run_before_ENgetflowunits = _pdd.run_before_ENgetflowunits

def run_before_ENgetpatternindex():
    return _pdd.run_before_ENgetpatternindex()
run_before_ENgetpatternindex = _pdd.run_before_ENgetpatternindex

def run_before_ENgetpatternid():
    return _pdd.run_before_ENgetpatternid()
run_before_ENgetpatternid = _pdd.run_before_ENgetpatternid

def run_before_ENgetpatternlen():
    return _pdd.run_before_ENgetpatternlen()
run_before_ENgetpatternlen = _pdd.run_before_ENgetpatternlen

def run_before_ENgetpatternvalue():
    return _pdd.run_before_ENgetpatternvalue()
run_before_ENgetpatternvalue = _pdd.run_before_ENgetpatternvalue

def run_before_ENgetqualtype():
    return _pdd.run_before_ENgetqualtype()
run_before_ENgetqualtype = _pdd.run_before_ENgetqualtype

def run_before_ENgeterror():
    return _pdd.run_before_ENgeterror()
run_before_ENgeterror = _pdd.run_before_ENgeterror

def run_before_ENgetnodeindex():
    return _pdd.run_before_ENgetnodeindex()
run_before_ENgetnodeindex = _pdd.run_before_ENgetnodeindex

def run_before_ENgetnodeid():
    return _pdd.run_before_ENgetnodeid()
run_before_ENgetnodeid = _pdd.run_before_ENgetnodeid

def run_before_ENgetnodetype():
    return _pdd.run_before_ENgetnodetype()
run_before_ENgetnodetype = _pdd.run_before_ENgetnodetype

def run_before_ENgetnodevalue():
    return _pdd.run_before_ENgetnodevalue()
run_before_ENgetnodevalue = _pdd.run_before_ENgetnodevalue

def run_before_ENgetlinkindex():
    return _pdd.run_before_ENgetlinkindex()
run_before_ENgetlinkindex = _pdd.run_before_ENgetlinkindex

def run_before_ENgetlinkid():
    return _pdd.run_before_ENgetlinkid()
run_before_ENgetlinkid = _pdd.run_before_ENgetlinkid

def run_before_ENgetlinktype():
    return _pdd.run_before_ENgetlinktype()
run_before_ENgetlinktype = _pdd.run_before_ENgetlinktype

def run_before_ENgetlinknodes():
    return _pdd.run_before_ENgetlinknodes()
run_before_ENgetlinknodes = _pdd.run_before_ENgetlinknodes

def run_before_ENgetlinkvalue():
    return _pdd.run_before_ENgetlinkvalue()
run_before_ENgetlinkvalue = _pdd.run_before_ENgetlinkvalue

def run_before_ENgetversion():
    return _pdd.run_before_ENgetversion()
run_before_ENgetversion = _pdd.run_before_ENgetversion

def run_before_ENsetcontrol():
    return _pdd.run_before_ENsetcontrol()
run_before_ENsetcontrol = _pdd.run_before_ENsetcontrol

def run_before_ENsetnodevalue():
    return _pdd.run_before_ENsetnodevalue()
run_before_ENsetnodevalue = _pdd.run_before_ENsetnodevalue

def run_before_ENsetlinkvalue():
    return _pdd.run_before_ENsetlinkvalue()
run_before_ENsetlinkvalue = _pdd.run_before_ENsetlinkvalue

def run_before_ENaddpattern():
    return _pdd.run_before_ENaddpattern()
run_before_ENaddpattern = _pdd.run_before_ENaddpattern

def run_before_ENsetpattern():
    return _pdd.run_before_ENsetpattern()
run_before_ENsetpattern = _pdd.run_before_ENsetpattern

def run_before_ENsetpatternvalue():
    return _pdd.run_before_ENsetpatternvalue()
run_before_ENsetpatternvalue = _pdd.run_before_ENsetpatternvalue

def run_before_ENsettimeparam():
    return _pdd.run_before_ENsettimeparam()
run_before_ENsettimeparam = _pdd.run_before_ENsettimeparam

def run_before_ENsetoption():
    return _pdd.run_before_ENsetoption()
run_before_ENsetoption = _pdd.run_before_ENsetoption

def run_before_ENsetstatusreport():
    return _pdd.run_before_ENsetstatusreport()
run_before_ENsetstatusreport = _pdd.run_before_ENsetstatusreport

def run_before_ENsetqualtype():
    return _pdd.run_before_ENsetqualtype()
run_before_ENsetqualtype = _pdd.run_before_ENsetqualtype

def run_before_ENopenH():
    return _pdd.run_before_ENopenH()
run_before_ENopenH = _pdd.run_before_ENopenH

def getEmitterData(eexp_, ecup_):
    return _pdd.getEmitterData(eexp_, ecup_)
getEmitterData = _pdd.getEmitterData

def setEmitterData(eexp_, ecup_):
    return _pdd.setEmitterData(eexp_, ecup_)
setEmitterData = _pdd.setEmitterData
# This file is compatible with both classic and new-style classes.

cvar = _pdd.cvar

